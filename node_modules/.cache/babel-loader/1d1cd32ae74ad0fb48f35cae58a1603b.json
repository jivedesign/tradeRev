{"ast":null,"code":"var _jsxFileName = \"/Users/joshnguyen/Documents/Development/tradeRev/traderev/src/components/fullscreenImage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport Control from './control';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledFullScreenImageContainer = styled.div`\n  position: absolute;\n  top: 0;\n  height: 100%;\n  width: 100%;\n  text-align: center;\n  background: rgb(0,0,0,0.8);\n`;\n_c = StyledFullScreenImageContainer;\nconst StyledFullscreenImage = styled.img`\n  max-height: 90%;  \n  max-width: 90%;\n  margin: 20px 50px 50px 50px;\n`;\n_c2 = StyledFullscreenImage;\nconst StyledControlBar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 20px;\n`;\n_c3 = StyledControlBar;\nconst StyledCloseButton = styled.div`\n  display: block;\n  color: white;\n  cursor: pointer;\n  margin: 10px;\n`;\n_c4 = StyledCloseButton;\n\nconst FullscreenImage = props => {\n  _s();\n\n  const {\n    imageObjects,\n    currentImageIndex,\n    onCloseClick,\n    onNextClick,\n    onPrevClick\n  } = props;\n  const [imageIndex, setImageIndex] = useState(currentImageIndex);\n  const [currentImage, setCurrentImage] = useState(imageObjects[currentImageIndex]);\n  handleControlClick = useCallback(direction => {\n    if (imageIndex === imageObjects.length - 1 && direction === 'next') {\n      nextIndex = 0;\n    } else if (imageIndex === 0 && direction === 'prev') {\n      nextIndex = mageObjects.length - 1;\n    }\n\n    setImageIndex(nextIndex);\n    setCurrentImage(imageObjects[nextIndex]);\n  }, []); // const handlePrevClick = useCallback(() => {\n  //   setImageIndex(imageIndex - 1);\n  //   setCurrentImage(imageObjects[imageIndex - 1]);\n  // }, [setImageIndex, imageIndex, setCurrentImage])\n  // const handleNextClick = useCallback(() => {\n  //   setImageIndex(imageIndex + 1);\n  //   setCurrentImage(imageObjects[imageIndex + 1])\n  // }, [setImageIndex, imageIndex, setCurrentImage])\n\n  return /*#__PURE__*/_jsxDEV(StyledFullScreenImageContainer, {\n    children: [/*#__PURE__*/_jsxDEV(StyledControlBar, {\n      children: [/*#__PURE__*/_jsxDEV(Control, {\n        onControlClick: () => handleControlClick('prev'),\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledCloseButton, {\n        onClick: onCloseClick,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Control, {\n        onControlClick: () => handleControlClick('next'),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), currentImage && /*#__PURE__*/_jsxDEV(StyledFullscreenImage, {\n      src: currentImage.urls.regular\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FullscreenImage, \"clviCHIcA9CYxafsNKJeYrYz5Mk=\");\n\n_c5 = FullscreenImage;\nexport default FullscreenImage;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"StyledFullScreenImageContainer\");\n$RefreshReg$(_c2, \"StyledFullscreenImage\");\n$RefreshReg$(_c3, \"StyledControlBar\");\n$RefreshReg$(_c4, \"StyledCloseButton\");\n$RefreshReg$(_c5, \"FullscreenImage\");","map":{"version":3,"sources":["/Users/joshnguyen/Documents/Development/tradeRev/traderev/src/components/fullscreenImage.jsx"],"names":["React","useEffect","useState","useCallback","styled","Control","StyledFullScreenImageContainer","div","StyledFullscreenImage","img","StyledControlBar","StyledCloseButton","FullscreenImage","props","imageObjects","currentImageIndex","onCloseClick","onNextClick","onPrevClick","imageIndex","setImageIndex","currentImage","setCurrentImage","handleControlClick","direction","length","nextIndex","mageObjects","urls","regular"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,8BAA8B,GAAGF,MAAM,CAACG,GAAI;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;KAAMD,8B;AASN,MAAME,qBAAqB,GAAGJ,MAAM,CAACK,GAAI;AACzC;AACA;AACA;AACA,CAJA;MAAMD,qB;AAMN,MAAME,gBAAgB,GAAGN,MAAM,CAACG,GAAI;AACpC;AACA;AACA;AACA,CAJA;MAAMG,gB;AAMN,MAAMC,iBAAiB,GAAGP,MAAM,CAACG,GAAI;AACrC;AACA;AACA;AACA;AACA,CALA;MAAMI,iB;;AAON,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAAA;;AACjC,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,iBAAhB;AAAmCC,IAAAA,YAAnC;AAAiDC,IAAAA,WAAjD;AAA8DC,IAAAA;AAA9D,MAA8EL,KAApF;AAEA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BlB,QAAQ,CAACa,iBAAD,CAA5C;AACA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCpB,QAAQ,CAACY,YAAY,CAACC,iBAAD,CAAb,CAAhD;AAEAQ,EAAAA,kBAAkB,GAAGpB,WAAW,CAAEqB,SAAD,IAAe;AAC9C,QAAIL,UAAU,KAAKL,YAAY,CAACW,MAAb,GAAsB,CAArC,IAA0CD,SAAS,KAAK,MAA5D,EAAoE;AAClEE,MAAAA,SAAS,GAAG,CAAZ;AACD,KAFD,MAEO,IAAIP,UAAU,KAAK,CAAf,IAAoBK,SAAS,KAAK,MAAtC,EAA8C;AACnDE,MAAAA,SAAS,GAAGC,WAAW,CAACF,MAAZ,GAAqB,CAAjC;AACD;;AAEDL,IAAAA,aAAa,CAACM,SAAD,CAAb;AACAJ,IAAAA,eAAe,CAACR,YAAY,CAACY,SAAD,CAAb,CAAf;AACD,GAT+B,EAS7B,EAT6B,CAAhC,CANiC,CAiBjC;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,sBACE,QAAC,8BAAD;AAAA,4BACE,QAAC,gBAAD;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,cAAc,EAAE,MAAMH,kBAAkB,CAAC,MAAD,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,iBAAD;AAAmB,QAAA,OAAO,EAAEP,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,OAAD;AAAS,QAAA,cAAc,EAAE,MAAMO,kBAAkB,CAAC,MAAD,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAMGF,YAAY,iBAAI,QAAC,qBAAD;AAAuB,MAAA,GAAG,EAAEA,YAAY,CAACO,IAAb,CAAkBC;AAA9C;AAAA;AAAA;AAAA;AAAA,YANnB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CArCD;;GAAMjB,e;;MAAAA,e;AAuCN,eAAeA,eAAf","sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport Control from './control';\n\nconst StyledFullScreenImageContainer = styled.div`\n  position: absolute;\n  top: 0;\n  height: 100%;\n  width: 100%;\n  text-align: center;\n  background: rgb(0,0,0,0.8);\n`;\n\nconst StyledFullscreenImage = styled.img`\n  max-height: 90%;  \n  max-width: 90%;\n  margin: 20px 50px 50px 50px;\n`;\n\nconst StyledControlBar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 20px;\n`;\n\nconst StyledCloseButton = styled.div`\n  display: block;\n  color: white;\n  cursor: pointer;\n  margin: 10px;\n`;\n\nconst FullscreenImage = (props) => {\n  const { imageObjects, currentImageIndex, onCloseClick, onNextClick, onPrevClick } = props;\n\n  const [imageIndex, setImageIndex] = useState(currentImageIndex);\n  const [currentImage, setCurrentImage] = useState(imageObjects[currentImageIndex]);\n\n  handleControlClick = useCallback((direction) => {\n    if (imageIndex === imageObjects.length - 1 && direction === 'next') {\n      nextIndex = 0;\n    } else if (imageIndex === 0 && direction === 'prev') {\n      nextIndex = mageObjects.length - 1;\n    }\n\n    setImageIndex(nextIndex);\n    setCurrentImage(imageObjects[nextIndex]);\n  }, []);\n\n  // const handlePrevClick = useCallback(() => {\n  //   setImageIndex(imageIndex - 1);\n  //   setCurrentImage(imageObjects[imageIndex - 1]);\n  // }, [setImageIndex, imageIndex, setCurrentImage])\n\n  // const handleNextClick = useCallback(() => {\n  //   setImageIndex(imageIndex + 1);\n  //   setCurrentImage(imageObjects[imageIndex + 1])\n  // }, [setImageIndex, imageIndex, setCurrentImage])\n\n  return (\n    <StyledFullScreenImageContainer>\n      <StyledControlBar>\n        <Control onControlClick={() => handleControlClick('prev')}>Prev</Control>\n        <StyledCloseButton onClick={onCloseClick}>Close</StyledCloseButton>\n        <Control onControlClick={() => handleControlClick('next')}>Next</Control>\n      </StyledControlBar>\n      {currentImage && <StyledFullscreenImage src={currentImage.urls.regular} />}\n    </StyledFullScreenImageContainer>\n  );\n}\n\nexport default FullscreenImage;"]},"metadata":{},"sourceType":"module"}