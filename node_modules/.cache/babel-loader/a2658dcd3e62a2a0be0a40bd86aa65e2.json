{"ast":null,"code":"var _jsxFileName = \"/Users/joshnguyen/Documents/Development/tradeRev/traderev/src/components/fullscreenImage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport Control from './control';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledFullScreenImageContainer = styled.div`\n  position: absolute;\n  top: 0;\n  height: 100%;\n  width: 100%;\n  text-align: center;\n  background: rgb(0,0,0,0.8);\n`;\n_c = StyledFullScreenImageContainer;\nconst StyledFullscreenImage = styled.img`\n  max-height: 80%;  \n  max-width: 90%;\n  padding: 20px 50px 50px 50px;\n`;\n_c2 = StyledFullscreenImage;\nconst StyledControlBar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 20px;\n  font-weight: bold;\n  text-transform: uppercase;\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 50px;\n  height: 100%;\n`;\n_c3 = StyledControlBar;\nconst StyledFullscreenBaseLayer = styled.div`\n  height: 100%;\n  width: 100%;\n`;\n_c4 = StyledFullscreenBaseLayer;\nconst StyledPhotoDescription = styled.div`\n  text-align: center;\n  color: white;\n`;\n_c5 = StyledPhotoDescription;\nconst StyledCloseButton = styled.div`\n  display: block;\n  color: white;\n  cursor: pointer;\n  text-transform: uppercase;\n`;\n_c6 = StyledCloseButton;\n\nconst FullscreenImage = props => {\n  _s();\n\n  const {\n    imageObjects,\n    currentImageIndex,\n    onCloseClick\n  } = props;\n  const [imageIndex, setImageIndex] = useState(null);\n  const [currentImage, setCurrentImage] = useState(imageObjects[currentImageIndex]);\n  useEffect(() => {\n    if (currentImageIndex) {\n      setImageIndex(currentImageIndex);\n      setCurrentImage(imageObjects[currentImageIndex]);\n    }\n  }, [currentImageIndex, imageObjects]);\n  const handleControlClick = useCallback(direction => {\n    let nextIndex;\n\n    if (imageIndex === imageObjects.length - 1 && direction === 'next') {\n      nextIndex = 0;\n    } else if (imageIndex === 0 && direction === 'prev') {\n      nextIndex = imageObjects.length - 1;\n    } else {\n      nextIndex = direction === 'next' ? imageIndex + 1 : imageIndex - 1;\n    }\n\n    setImageIndex(nextIndex);\n    setCurrentImage(imageObjects[nextIndex]);\n  }, [imageIndex, imageObjects]);\n\n  const handleCloseClick = () => {\n    onCloseClick(currentImage.id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledFullScreenImageContainer, {\n    children: /*#__PURE__*/_jsxDEV(StyledFullscreenBaseLayer, {\n      children: [/*#__PURE__*/_jsxDEV(StyledCloseButton, {\n        onClick: handleCloseClick,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledPhotoDescription, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"[\", imageIndex + 1, \"/\", imageObjects.length, \"] - \", currentImage.alt_description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), currentImage && /*#__PURE__*/_jsxDEV(StyledControlBar, {\n        children: [/*#__PURE__*/_jsxDEV(Control, {\n          onControlClick: () => handleControlClick('prev'),\n          children: \"Prev\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StyledFullscreenImage, {\n          src: currentImage.urls.regular\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Control, {\n          onControlClick: () => handleControlClick('next'),\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FullscreenImage, \"wNoddQxYsJgaHNf+RvjKYCrf6hA=\");\n\n_c7 = FullscreenImage;\nexport default FullscreenImage;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"StyledFullScreenImageContainer\");\n$RefreshReg$(_c2, \"StyledFullscreenImage\");\n$RefreshReg$(_c3, \"StyledControlBar\");\n$RefreshReg$(_c4, \"StyledFullscreenBaseLayer\");\n$RefreshReg$(_c5, \"StyledPhotoDescription\");\n$RefreshReg$(_c6, \"StyledCloseButton\");\n$RefreshReg$(_c7, \"FullscreenImage\");","map":{"version":3,"sources":["/Users/joshnguyen/Documents/Development/tradeRev/traderev/src/components/fullscreenImage.jsx"],"names":["React","useEffect","useState","useCallback","styled","Control","StyledFullScreenImageContainer","div","StyledFullscreenImage","img","StyledControlBar","StyledFullscreenBaseLayer","StyledPhotoDescription","StyledCloseButton","FullscreenImage","props","imageObjects","currentImageIndex","onCloseClick","imageIndex","setImageIndex","currentImage","setCurrentImage","handleControlClick","direction","nextIndex","length","handleCloseClick","id","alt_description","urls","regular"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport Control from './control';\n\nconst StyledFullScreenImageContainer = styled.div`\n  position: absolute;\n  top: 0;\n  height: 100%;\n  width: 100%;\n  text-align: center;\n  background: rgb(0,0,0,0.8);\n`;\n\nconst StyledFullscreenImage = styled.img`\n  max-height: 80%;  \n  max-width: 90%;\n  padding: 20px 50px 50px 50px;\n`;\n\nconst StyledControlBar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 20px;\n  font-weight: bold;\n  text-transform: uppercase;\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 50px;\n  height: 100%;\n`;\n\nconst StyledFullscreenBaseLayer = styled.div`\n  height: 100%;\n  width: 100%;\n`;\n\nconst StyledPhotoDescription = styled.div`\n  text-align: center;\n  color: white;\n`;\n\nconst StyledCloseButton = styled.div`\n  display: block;\n  color: white;\n  cursor: pointer;\n  text-transform: uppercase;\n`;\n\nconst FullscreenImage = (props) => {\n  const { imageObjects, currentImageIndex, onCloseClick } = props;\n\n  const [imageIndex, setImageIndex] = useState(null);\n  const [currentImage, setCurrentImage] = useState(imageObjects[currentImageIndex]);\n\n  useEffect(() => {\n    if (currentImageIndex) {\n      setImageIndex(currentImageIndex);\n      setCurrentImage(imageObjects[currentImageIndex]);\n    }\n    }, [currentImageIndex, imageObjects]);\n\n  const handleControlClick = useCallback((direction) => {\n    let nextIndex;\n    if (imageIndex === imageObjects.length - 1 && direction === 'next') {\n      nextIndex = 0;\n    } else if (imageIndex === 0 && direction === 'prev') {\n      nextIndex = imageObjects.length - 1;\n    } else {\n      nextIndex = direction === 'next' ? imageIndex + 1 : imageIndex - 1;\n    }\n\n    setImageIndex(nextIndex);\n    setCurrentImage(imageObjects[nextIndex]);\n  }, [imageIndex, imageObjects]);\n\n  const handleCloseClick = () => {\n    onCloseClick(currentImage.id);\n  }\n\n  return (\n    <StyledFullScreenImageContainer>\n      <StyledFullscreenBaseLayer>\n        <StyledCloseButton onClick={handleCloseClick}>Close</StyledCloseButton>\n          <StyledPhotoDescription>\n          <div>[{imageIndex + 1}/{imageObjects.length}] - {currentImage.alt_description}</div>\n        </StyledPhotoDescription>\n        {currentImage && (\n          <StyledControlBar>\n            <Control onControlClick={() => handleControlClick('prev')}>Prev</Control>\n            <StyledFullscreenImage src={currentImage.urls.regular} />\n            <Control onControlClick={() => handleControlClick('next')}>Next</Control>\n          </StyledControlBar>\n        )}\n      </StyledFullscreenBaseLayer>\n    </StyledFullScreenImageContainer>\n  );\n}\n\nexport default FullscreenImage;"]},"metadata":{},"sourceType":"module"}