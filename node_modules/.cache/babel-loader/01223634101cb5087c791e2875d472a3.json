{"ast":null,"code":"var _jsxFileName = \"/Users/joshnguyen/Documents/Development/tradeRev/traderev/src/components/grid.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport useImageHook from '../hooks/imageHook';\nimport ImageTile from './imageTile';\nimport { getImages } from '../Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledGrid = styled.div`\n  border: 1px dashed red;\n  width: 100vw;\n  height: 100vh;\n  background: lightgray;\n`;\n_c = StyledGrid;\n\nconst Grid = () => {\n  _s();\n\n  const [images, setImages] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [hasInitialized, setHasInitialized] = useState(false);\n  const {\n    init,\n    imageObjects,\n    getImageObjects\n  } = useImageHook();\n  useEffect(() => {\n    if (hasInitialized && imageObjects.length) setImages(imageObjects);\n  }, [hasInitialized, imageObjects]);\n  useEffect(() => {\n    if (!hasInitialized) {\n      init();\n      setHasInitialized(true);\n    }\n  }, [hasInitialized]);\n\n  const handleGetImages = async () => {\n    const newImages = await getImages(currentPage);\n    console.log('-- IMAGES;', images);\n    setImages(images.concat(newImages));\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledGrid, {\n    children: images.map(image => /*#__PURE__*/_jsxDEV(ImageTile, {\n      imageData: image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 28\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Grid, \"jY+DImtM7xx2nN5+mChNjJYm+8s=\", false, function () {\n  return [useImageHook];\n});\n\n_c2 = Grid;\nexport default Grid;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledGrid\");\n$RefreshReg$(_c2, \"Grid\");","map":{"version":3,"sources":["/Users/joshnguyen/Documents/Development/tradeRev/traderev/src/components/grid.jsx"],"names":["React","useEffect","useState","styled","useImageHook","ImageTile","getImages","StyledGrid","div","Grid","images","setImages","currentPage","setCurrentPage","hasInitialized","setHasInitialized","init","imageObjects","getImageObjects","length","handleGetImages","newImages","console","log","concat","map","image"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAAQC,SAAR,QAAwB,QAAxB;;AAEA,MAAMC,UAAU,GAAGJ,MAAM,CAACK,GAAI;AAC9B;AACA;AACA;AACA;AACA,CALA;KAAMD,U;;AAON,MAAME,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACY,cAAD,EAAiBC,iBAAjB,IAAsCb,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM;AAAEc,IAAAA,IAAF;AAAQC,IAAAA,YAAR;AAAsBC,IAAAA;AAAtB,MAA0Cd,YAAY,EAA5D;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,cAAc,IAAIG,YAAY,CAACE,MAAnC,EAA2CR,SAAS,CAACM,YAAD,CAAT;AAC5C,GAFQ,EAEN,CAACH,cAAD,EAAiBG,YAAjB,CAFM,CAAT;AAIAhB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACa,cAAL,EAAqB;AACnBE,MAAAA,IAAI;AACJD,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD;AACF,GALQ,EAKN,CAACD,cAAD,CALM,CAAT;;AAQA,QAAMM,eAAe,GAAG,YAAY;AAClC,UAAMC,SAAS,GAAG,MAAMf,SAAS,CAACM,WAAD,CAAjC;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0Bb,MAA1B;AACAC,IAAAA,SAAS,CAACD,MAAM,CAACc,MAAP,CAAcH,SAAd,CAAD,CAAT;AACD,GAJD;;AAMA,sBACE,QAAC,UAAD;AAAA,cACGX,MAAM,CAACe,GAAP,CAAWC,KAAK,iBAAI,QAAC,SAAD;AAAW,MAAA,SAAS,EAAEA;AAAtB;AAAA;AAAA;AAAA;AAAA,YAApB;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA/BD;;GAAMjB,I;UAI4CL,Y;;;MAJ5CK,I;AAiCN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport useImageHook from '../hooks/imageHook';\nimport ImageTile from './imageTile';\nimport {getImages} from '../Api';\n\nconst StyledGrid = styled.div`\n  border: 1px dashed red;\n  width: 100vw;\n  height: 100vh;\n  background: lightgray;\n`;\n\nconst Grid = () => {\n  const [images, setImages] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [hasInitialized, setHasInitialized] = useState(false);\n  const { init, imageObjects, getImageObjects } = useImageHook();\n\n  useEffect(() => {\n    if (hasInitialized && imageObjects.length) setImages(imageObjects);\n  }, [hasInitialized, imageObjects]);\n\n  useEffect(() => {\n    if (!hasInitialized) {\n      init();\n      setHasInitialized(true);\n    }\n  }, [hasInitialized]);\n\n\n  const handleGetImages = async () => {\n    const newImages = await getImages(currentPage);\n    console.log('-- IMAGES;', images)\n    setImages(images.concat(newImages));\n  }\n\n  return (\n    <StyledGrid>\n      {images.map(image => <ImageTile imageData={image} />)}\n      \n    </StyledGrid>\n  )\n\n}\n\nexport default Grid;"]},"metadata":{},"sourceType":"module"}