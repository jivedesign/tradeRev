{"ast":null,"code":"var _jsxFileName = \"/Users/joshnguyen/Documents/Development/tradeRev/src/components/grid.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport useImageHook from '../hooks/imageHook';\nimport ImageTile from './imageTile';\nimport FullscreenImage from './fullscreenImage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledGridContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  padding: 5px;\n  overflow: scroll;\n`;\n_c = StyledGridContainer;\nconst StyledGrid = styled.div`\nwidth: 100%;\ndisplay: flex;\nflex-wrap: wrap;\n`;\n_c2 = StyledGrid;\nconst LoadingComponent = styled.div`\n  font-weight: bold;\n  font-size: 50px;\n  margin: 100px;\n`;\n_c3 = LoadingComponent;\nconst HEADER_HEIGHT = 35;\n\nconst Grid = () => {\n  _s();\n\n  const [images, setImages] = useState([]);\n  const [hasInitialized, setHasInitialized] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showFullscreen, setShowFullscreen] = useState(false);\n  const [fullscreenImageObject, setFullscreenImageObject] = useState(null);\n  const [fullscreenImageIndex, setFullscreenImageIndex] = useState(null);\n  const listInnerRef = useRef();\n  const {\n    imageObjects,\n    getAndAppendNextImageListPage\n  } = useImageHook();\n  useEffect(() => {\n    if (hasInitialized && imageObjects) {\n      setImages(imageObjects);\n      setIsLoading(false);\n    }\n\n    ;\n  }, [hasInitialized, imageObjects]);\n  useEffect(() => {\n    if (!hasInitialized) {\n      setIsLoading(true);\n      getAndAppendNextImageListPage();\n      setHasInitialized(true);\n    }\n  }, [hasInitialized, getAndAppendNextImageListPage]);\n\n  const handleScroll = () => {\n    if (listInnerRef.current) {\n      const {\n        scrollTop,\n        scrollHeight,\n        clientHeight\n      } = listInnerRef.current;\n\n      if (scrollTop + clientHeight === scrollHeight) {\n        handleGetImages();\n        setIsLoading(true);\n      }\n    }\n  };\n\n  const handleGetImages = async () => {\n    getAndAppendNextImageListPage();\n  };\n\n  const handleShowFullscreenImage = (imageObj, index) => {\n    setFullscreenImageIndex(index);\n    setFullscreenImageObject(imageObj);\n    setShowFullscreen(true);\n  };\n\n  const jumpToPhotoInGrid = imageId => {\n    var top = document.getElementById(imageId).offsetTop;\n    listInnerRef.current.scrollTo(HEADER_HEIGHT, top);\n  };\n\n  const handleCloseFullscreenImage = useCallback(imageId => {\n    setFullscreenImageObject(null);\n    setFullscreenImageIndex(null);\n    setShowFullscreen(false);\n    jumpToPhotoInGrid(imageId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(StyledGridContainer, {\n    ref: listInnerRef,\n    onScroll: () => handleScroll(),\n    children: [/*#__PURE__*/_jsxDEV(StyledGrid, {\n      children: images.map((image, index) => /*#__PURE__*/_jsxDEV(ImageTile, {\n        index: index,\n        imageData: image,\n        onClick: handleShowFullscreenImage\n      }, `${image.id}-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 39\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), showFullscreen && /*#__PURE__*/_jsxDEV(FullscreenImage, {\n      imageObjects: images,\n      currentImageIndex: fullscreenImageIndex,\n      imageData: fullscreenImageObject,\n      onCloseClick: handleCloseFullscreenImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(LoadingComponent, {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Grid, \"SB+tTlBmWfZvpSISfH6VG21tvQU=\", false, function () {\n  return [useImageHook];\n});\n\n_c4 = Grid;\nexport default Grid;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"StyledGridContainer\");\n$RefreshReg$(_c2, \"StyledGrid\");\n$RefreshReg$(_c3, \"LoadingComponent\");\n$RefreshReg$(_c4, \"Grid\");","map":{"version":3,"sources":["/Users/joshnguyen/Documents/Development/tradeRev/src/components/grid.jsx"],"names":["React","useRef","useEffect","useState","useCallback","styled","useImageHook","ImageTile","FullscreenImage","StyledGridContainer","div","StyledGrid","LoadingComponent","HEADER_HEIGHT","Grid","images","setImages","hasInitialized","setHasInitialized","isLoading","setIsLoading","showFullscreen","setShowFullscreen","fullscreenImageObject","setFullscreenImageObject","fullscreenImageIndex","setFullscreenImageIndex","listInnerRef","imageObjects","getAndAppendNextImageListPage","handleScroll","current","scrollTop","scrollHeight","clientHeight","handleGetImages","handleShowFullscreenImage","imageObj","index","jumpToPhotoInGrid","imageId","top","document","getElementById","offsetTop","scrollTo","handleCloseFullscreenImage","map","image","id"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport useImageHook from '../hooks/imageHook';\nimport ImageTile from './imageTile';\nimport FullscreenImage from './fullscreenImage';\n\nconst StyledGridContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  padding: 5px;\n  overflow: scroll;\n`;\n\nconst StyledGrid = styled.div`\nwidth: 100%;\ndisplay: flex;\nflex-wrap: wrap;\n`;\n\nconst LoadingComponent = styled.div`\n  font-weight: bold;\n  font-size: 50px;\n  margin: 100px;\n`;\n\nconst HEADER_HEIGHT = 35;\n\nconst Grid = () => {\n  const [images, setImages] = useState([]);\n  const [hasInitialized, setHasInitialized] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showFullscreen, setShowFullscreen] = useState(false);\n  const [fullscreenImageObject, setFullscreenImageObject] = useState(null);\n  const [fullscreenImageIndex, setFullscreenImageIndex] = useState(null);\n\n  const listInnerRef = useRef();\n\n  const { imageObjects, getAndAppendNextImageListPage } = useImageHook();\n\n  useEffect(() => {\n    if (hasInitialized && imageObjects) {\n      setImages(imageObjects);\n      setIsLoading(false);\n    };\n  }, [hasInitialized, imageObjects]);\n\n  useEffect(() => {\n    if (!hasInitialized) {\n      setIsLoading(true);\n\n      getAndAppendNextImageListPage();\n      setHasInitialized(true);\n    }\n  }, [hasInitialized, getAndAppendNextImageListPage]);\n\n  const handleScroll = () => {\n    if (listInnerRef.current) {\n      const { scrollTop, scrollHeight, clientHeight } = listInnerRef.current;\n      if (scrollTop + clientHeight === scrollHeight) {\n        handleGetImages();\n        setIsLoading(true);\n      }\n    }\n  }\n\n  const handleGetImages = async () => {\n    getAndAppendNextImageListPage();\n  }\n\n  const handleShowFullscreenImage = (imageObj, index) => {\n    setFullscreenImageIndex(index);\n    setFullscreenImageObject(imageObj);\n    setShowFullscreen(true);\n  }\n\n  const jumpToPhotoInGrid = (imageId) => {\n      var top = document.getElementById(imageId).offsetTop; \n      listInnerRef.current.scrollTo(HEADER_HEIGHT, top);\n  }\n\n  const handleCloseFullscreenImage = useCallback((imageId) => {\n    setFullscreenImageObject(null);\n    setFullscreenImageIndex(null);\n    setShowFullscreen(false);\n    jumpToPhotoInGrid(imageId);\n  }, []);\n\n  return (\n    <StyledGridContainer ref={listInnerRef} onScroll={() => handleScroll()}>\n      <StyledGrid>\n        {images.map((image, index) => <ImageTile key={`${image.id}-${index}`} index={index} imageData={image} onClick={handleShowFullscreenImage} />)}\n      </StyledGrid>\n      {showFullscreen && (\n        <FullscreenImage\n          imageObjects={images}\n          currentImageIndex={fullscreenImageIndex}\n          imageData={fullscreenImageObject}\n          onCloseClick={handleCloseFullscreenImage}\n        />)\n      }\n      {isLoading && <LoadingComponent>loading...</LoadingComponent>}\n    </StyledGridContainer>\n  )\n\n}\n\nexport default Grid;"]},"metadata":{},"sourceType":"module"}