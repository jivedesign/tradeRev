[{"/Users/joshnguyen/Documents/Development/tradeRev/src/index.js":"1","/Users/joshnguyen/Documents/Development/tradeRev/src/App.js":"2","/Users/joshnguyen/Documents/Development/tradeRev/src/reportWebVitals.js":"3","/Users/joshnguyen/Documents/Development/tradeRev/src/components/grid.jsx":"4","/Users/joshnguyen/Documents/Development/tradeRev/src/hooks/imageHook.js":"5","/Users/joshnguyen/Documents/Development/tradeRev/src/components/fullscreenImage.jsx":"6","/Users/joshnguyen/Documents/Development/tradeRev/src/components/imageTile.jsx":"7","/Users/joshnguyen/Documents/Development/tradeRev/src/Api.js":"8","/Users/joshnguyen/Documents/Development/tradeRev/src/components/control.jsx":"9"},{"size":500,"mtime":1619996686652,"results":"10","hashOfConfig":"11"},{"size":168,"mtime":1620097639836,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1619996686653,"results":"13","hashOfConfig":"11"},{"size":2974,"mtime":1620277278991,"results":"14","hashOfConfig":"11"},{"size":640,"mtime":1620277352597,"results":"15","hashOfConfig":"11"},{"size":2743,"mtime":1620105386059,"results":"16","hashOfConfig":"11"},{"size":423,"mtime":1620277415477,"results":"17","hashOfConfig":"11"},{"size":655,"mtime":1620277461482,"results":"18","hashOfConfig":"11"},{"size":474,"mtime":1620105183673,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"dm3uef",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/joshnguyen/Documents/Development/tradeRev/src/index.js",[],"/Users/joshnguyen/Documents/Development/tradeRev/src/App.js",[],"/Users/joshnguyen/Documents/Development/tradeRev/src/reportWebVitals.js",[],"/Users/joshnguyen/Documents/Development/tradeRev/src/components/grid.jsx",["40"],"import React, { useRef, useEffect, useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport useImageHook from '../hooks/imageHook';\nimport ImageTile from './imageTile';\nimport FullscreenImage from './fullscreenImage';\n\nconst StyledGridContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  padding: 5px;\n  overflow: scroll;\n`;\n\nconst StyledGrid = styled.div`\nwidth: 100%;\n@media screen and (min-width: 1000px) {\n  width: 1200px;\n  margin: 0 auto;\n}\n`;\n\nconst LoadingComponent = styled.div`\n  font-weight: bold;\n  font-size: 50px;\n  margin: 100px;\n`;\n\nconst Grid = () => {\n  const [images, setImages] = useState([]);\n  const [hasInitialized, setHasInitialized] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showFullscreen, setShowFullscreen] = useState(false);\n  const [fullscreenImageObject, setFullscreenImageObject] = useState(null);\n  const [fullscreenImageIndex, setFullscreenImageIndex] = useState(null);\n\n  const listInnerRef = useRef();\n\n  const { imageObjects, getAndAppendNextImageListPage } = useImageHook();\n\n  useEffect(() => {\n    if (hasInitialized && imageObjects) {\n      setImages(imageObjects);\n      setIsLoading(false);\n    };\n  }, [hasInitialized, imageObjects]);\n\n  useEffect(() => {\n    if (!hasInitialized) {\n      setIsLoading(true);\n\n      getAndAppendNextImageListPage();\n      setHasInitialized(true);\n    }\n  }, [hasInitialized]);\n\n  const handleScroll = () => {\n    if (listInnerRef.current) {\n      const { scrollTop, scrollHeight, clientHeight } = listInnerRef.current;\n      if (scrollTop + clientHeight === scrollHeight) {\n        handleGetImages();\n      }\n    }\n  }\n\n  const handleGetImages = async () => {\n    getAndAppendNextImageListPage();\n  }\n\n  const handleShowFullscreenImage = (imageObj, index) => {\n    setFullscreenImageIndex(index);\n    setFullscreenImageObject(imageObj);\n    setShowFullscreen(true);\n  }\n\n  const jumpToPhotoInGrid = (imageId) => {\n      var top = document.getElementById(imageId).offsetTop; \n      listInnerRef.current.scrollTo(0, top);\n  }\n\n  const handleCloseFullscreenImage = useCallback((imageId) => {\n    setFullscreenImageObject(null);\n    setFullscreenImageIndex(null);\n    setShowFullscreen(false);\n    jumpToPhotoInGrid(imageId);\n  }, []);\n\n  return (\n    <StyledGridContainer ref={listInnerRef} onScroll={() => handleScroll()}>\n      <StyledGrid>\n        {images.map((image, index) => <ImageTile key={image.id} index={index} imageData={image} onClick={handleShowFullscreenImage} />)}\n      </StyledGrid>\n      {isLoading && <LoadingComponent>loading...</LoadingComponent>}\n      {showFullscreen && (\n        <FullscreenImage\n          imageObjects={images}\n          currentImageIndex={fullscreenImageIndex}\n          imageData={fullscreenImageObject}\n          onCloseClick={handleCloseFullscreenImage}\n        />)\n      }\n      <LoadingComponent>loading...</LoadingComponent>\n    </StyledGridContainer>\n  )\n\n}\n\nexport default Grid;","/Users/joshnguyen/Documents/Development/tradeRev/src/hooks/imageHook.js",["41","42"],"import React, { useState } from 'react';\nimport { getImages, getImage } from \"../Api\";\n\nconst useImageHook = () => {\n  const [currentPage, setCurrentPage] = useState(0);\n  const [imageObjects, setImageObjects] = useState([]);\n\n  const getAndAppendNextImageListPage = async () => {\n    setCurrentPage(currentPage + 1);\n    \n    const nextImageObjects = await getImages(currentPage + 1);\n    const newImageObjectsList = imageObjects.concat(nextImageObjects.data);\n    setImageObjects(newImageObjectsList)\n\n    return newImageObjectsList;\n  };\n\n  return {\n    imageObjects,\n    getAndAppendNextImageListPage\n  }\n}\n\nexport default useImageHook;","/Users/joshnguyen/Documents/Development/tradeRev/src/components/fullscreenImage.jsx",[],"/Users/joshnguyen/Documents/Development/tradeRev/src/components/imageTile.jsx",[],"/Users/joshnguyen/Documents/Development/tradeRev/src/Api.js",[],"/Users/joshnguyen/Documents/Development/tradeRev/src/components/control.jsx",[],{"ruleId":"43","severity":1,"message":"44","line":54,"column":6,"nodeType":"45","endLine":54,"endColumn":22,"suggestions":"46"},{"ruleId":"47","severity":1,"message":"48","line":1,"column":8,"nodeType":"49","messageId":"50","endLine":1,"endColumn":13},{"ruleId":"47","severity":1,"message":"51","line":2,"column":21,"nodeType":"49","messageId":"50","endLine":2,"endColumn":29},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAndAppendNextImageListPage'. Either include it or remove the dependency array.","ArrayExpression",["52"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'getImage' is defined but never used.",{"desc":"53","fix":"54"},"Update the dependencies array to be: [getAndAppendNextImageListPage, hasInitialized]",{"range":"55","text":"56"},[1406,1422],"[getAndAppendNextImageListPage, hasInitialized]"]